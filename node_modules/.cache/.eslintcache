[{"C:\\Users\\simra\\Desktop\\HospitalManagementSystemProject\\hospital\\hospital\\react\\src\\index.js":"1","C:\\Users\\simra\\Desktop\\HospitalManagementSystemProject\\hospital\\hospital\\react\\src\\App.js":"2","C:\\Users\\simra\\Desktop\\HospitalManagementSystemProject\\hospital\\hospital\\react\\src\\pages\\ViewRoom.js":"3","C:\\Users\\simra\\Desktop\\HospitalManagementSystemProject\\hospital\\hospital\\react\\src\\pages\\SearchRoom.js":"4","C:\\Users\\simra\\Desktop\\HospitalManagementSystemProject\\hospital\\hospital\\react\\src\\pages\\MainPage.js":"5","C:\\Users\\simra\\Desktop\\HospitalManagementSystemProject\\hospital\\hospital\\react\\src\\pages\\ShiftRoom.js":"6","C:\\Users\\simra\\Desktop\\HospitalManagementSystemProject\\hospital\\hospital\\react\\src\\pages\\AddRoom.js":"7","C:\\Users\\simra\\Desktop\\HospitalManagementSystemProject\\hospital\\hospital\\react\\src\\pages\\MainMenu.js":"8","C:\\Users\\simra\\Desktop\\HospitalManagementSystemProject\\hospital\\hospital\\react\\src\\pages\\UpdateRoom.js":"9","C:\\Users\\simra\\Desktop\\HospitalManagementSystemProject\\hospital\\hospital\\react\\src\\pages\\UpdatePayment.js":"10","C:\\Users\\simra\\Desktop\\HospitalManagementSystemProject\\hospital\\hospital\\react\\src\\pages\\GeneratePayment.js":"11","C:\\Users\\simra\\Desktop\\HospitalManagementSystemProject\\hospital\\hospital\\react\\src\\pages\\ViewForDetails.js":"12","C:\\Users\\simra\\Desktop\\HospitalManagementSystemProject\\hospital\\hospital\\react\\src\\pages\\ViewRoomAndDoctor.js":"13","C:\\Users\\simra\\Desktop\\HospitalManagementSystemProject\\hospital\\hospital\\react\\src\\pages\\SearchForDetails.js":"14","C:\\Users\\simra\\Desktop\\HospitalManagementSystemProject\\hospital\\hospital\\react\\src\\pages\\AddRoomAndDoctor.js":"15","C:\\Users\\simra\\Desktop\\HospitalManagementSystemProject\\hospital\\hospital\\react\\src\\pages\\Bill.js":"16","C:\\Users\\simra\\Desktop\\HospitalManagementSystemProject\\hospital\\hospital\\react\\src\\pages\\login.js":"17","C:\\Users\\simra\\Desktop\\HospitalManagementSystemProject\\hospital\\hospital\\react\\src\\pages\\Payout.js":"18","C:\\Users\\simra\\Desktop\\HospitalManagementSystemProject\\hospital\\hospital\\react\\src\\pages\\SearchRoomAndDoctor.js":"19","C:\\Users\\simra\\Desktop\\HospitalManagementSystemProject\\hospital\\hospital\\react\\src\\pages\\Doctor\\Doctor.js":"20","C:\\Users\\simra\\Desktop\\HospitalManagementSystemProject\\hospital\\hospital\\react\\src\\pages\\Bill\\ViewBill.js":"21","C:\\Users\\simra\\Desktop\\HospitalManagementSystemProject\\hospital\\hospital\\react\\src\\pages\\Patient\\ViewPatient.js":"22","C:\\Users\\simra\\Desktop\\HospitalManagementSystemProject\\hospital\\hospital\\react\\src\\pages\\Bill\\GenerateBill.js":"23","C:\\Users\\simra\\Desktop\\HospitalManagementSystemProject\\hospital\\hospital\\react\\src\\pages\\Report\\Report.js":"24","C:\\Users\\simra\\Desktop\\HospitalManagementSystemProject\\hospital\\hospital\\react\\src\\Side.js":"25","C:\\Users\\simra\\Desktop\\HospitalManagementSystemProject\\hospital\\hospital\\react\\src\\SideNav.js":"26","C:\\Users\\simra\\Desktop\\HospitalManagementSystemProject\\hospital\\hospital\\react\\src\\SideBar.js":"27","C:\\Users\\simra\\Desktop\\HospitalManagementSystemProject\\hospital\\hospital\\react\\src\\pages\\Add.js":"28","C:\\Users\\simra\\Desktop\\HospitalManagementSystemProject\\hospital\\hospital\\react\\src\\SideMenu.js":"29","C:\\Users\\simra\\Desktop\\HospitalManagementSystemProject\\hospital\\hospital\\react\\src\\pages\\Reg.js":"30","C:\\Users\\simra\\Desktop\\HospitalManagementSystemProject\\hospital\\hospital\\react\\src\\PatientNavigate.js":"31"},{"size":468,"mtime":1678521104605,"results":"32","hashOfConfig":"33"},{"size":3501,"mtime":1679167676778,"results":"34","hashOfConfig":"33"},{"size":3097,"mtime":1679168196101,"results":"35","hashOfConfig":"33"},{"size":3576,"mtime":1678513456036,"results":"36","hashOfConfig":"33"},{"size":3909,"mtime":1678513455842,"results":"37","hashOfConfig":"33"},{"size":4675,"mtime":1678513456132,"results":"38","hashOfConfig":"33"},{"size":2065,"mtime":1679168604560,"results":"39","hashOfConfig":"33"},{"size":7003,"mtime":1679167927715,"results":"40","hashOfConfig":"33"},{"size":3894,"mtime":1678513456258,"results":"41","hashOfConfig":"33"},{"size":5253,"mtime":1678513456215,"results":"42","hashOfConfig":"33"},{"size":9759,"mtime":1678537094780,"results":"43","hashOfConfig":"33"},{"size":4140,"mtime":1678513456305,"results":"44","hashOfConfig":"33"},{"size":3346,"mtime":1679168154218,"results":"45","hashOfConfig":"33"},{"size":4912,"mtime":1678513455989,"results":"46","hashOfConfig":"33"},{"size":6621,"mtime":1678513455441,"results":"47","hashOfConfig":"33"},{"size":91,"mtime":1678513455488,"results":"48","hashOfConfig":"33"},{"size":2278,"mtime":1679168071632,"results":"49","hashOfConfig":"33"},{"size":4284,"mtime":1678602665098,"results":"50","hashOfConfig":"33"},{"size":4583,"mtime":1679168427732,"results":"51","hashOfConfig":"33"},{"size":10832,"mtime":1678513456722,"results":"52","hashOfConfig":"33"},{"size":4003,"mtime":1678513456522,"results":"53","hashOfConfig":"33"},{"size":4411,"mtime":1678513459297,"results":"54","hashOfConfig":"33"},{"size":4566,"mtime":1678513456459,"results":"55","hashOfConfig":"33"},{"size":13532,"mtime":1678513459351,"results":"56","hashOfConfig":"33"},{"size":7546,"mtime":1679167715806,"results":"57","hashOfConfig":"33"},{"size":8428,"mtime":1678513455288,"results":"58","hashOfConfig":"33"},{"size":7762,"mtime":1678513455203,"results":"59","hashOfConfig":"33"},{"size":3786,"mtime":1679168455535,"results":"60","hashOfConfig":"33"},{"size":8459,"mtime":1679167870084,"results":"61","hashOfConfig":"33"},{"size":5801,"mtime":1678513455942,"results":"62","hashOfConfig":"33"},{"size":6706,"mtime":1679167701090,"results":"63","hashOfConfig":"33"},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"hpgcyc",{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77"},{"filePath":"78","messages":"79","suppressedMessages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","suppressedMessages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","suppressedMessages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","suppressedMessages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","suppressedMessages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"93","messages":"94","suppressedMessages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96"},{"filePath":"97","messages":"98","suppressedMessages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100"},{"filePath":"101","messages":"102","suppressedMessages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","suppressedMessages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"107","messages":"108","suppressedMessages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110"},{"filePath":"111","messages":"112","suppressedMessages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114"},{"filePath":"115","messages":"116","suppressedMessages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"118","messages":"119","suppressedMessages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"121","messages":"122","suppressedMessages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124"},{"filePath":"125","messages":"126","suppressedMessages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"128","messages":"129","suppressedMessages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131"},{"filePath":"132","messages":"133","suppressedMessages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135"},{"filePath":"136","messages":"137","suppressedMessages":"138","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139"},{"filePath":"140","messages":"141","suppressedMessages":"142","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143"},{"filePath":"144","messages":"145","suppressedMessages":"146","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147"},{"filePath":"148","messages":"149","suppressedMessages":"150","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"151","messages":"152","suppressedMessages":"153","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"154","messages":"155","suppressedMessages":"156","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"157","messages":"158","suppressedMessages":"159","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160"},{"filePath":"161","messages":"162","suppressedMessages":"163","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"164","messages":"165","suppressedMessages":"166","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"167","messages":"168","suppressedMessages":"169","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\simra\\Desktop\\HospitalManagementSystemProject\\hospital\\hospital\\react\\src\\index.js",[],[],"C:\\Users\\simra\\Desktop\\HospitalManagementSystemProject\\hospital\\hospital\\react\\src\\App.js",[],[],"C:\\Users\\simra\\Desktop\\HospitalManagementSystemProject\\hospital\\hospital\\react\\src\\pages\\ViewRoom.js",[],[],[],"C:\\Users\\simra\\Desktop\\HospitalManagementSystemProject\\hospital\\hospital\\react\\src\\pages\\SearchRoom.js",["170"],[],"import React,{useState,useEffect}from 'react'\r\nimport Sidenav from '../SideNav';\r\nimport Box from '@mui/material/Box';\r\nimport axios from 'axios';\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport Paper from '@mui/material/Paper';\r\nimport Divider from '@mui/material/Divider';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport SearchIcon from '@mui/icons-material/Search';\r\nimport Select from '@mui/material/Select';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport InputLabel from '@mui/material/InputLabel';\r\n\r\nconst SearchRoom = () => {\r\n  const[apiData,setApiData]=useState([]);\r\n  const[result,setResult]=useState({});\r\n  const [type,setType]=useState('');\r\n\r\n  const handleChange=(e)=>{\r\n    setType(e.target.value);\r\n  }\r\n  \r\n  const Search=()=>{\r\n    axios.get(`https://localhost:44360/api/Room/${type}`)\r\n    .then((Data)=>{\r\n     setResult(Data.data);\r\n    })\r\n    console.log(type);\r\n  }\r\n  console.log(result);\r\n  useEffect(() => {\r\n    axios.get('https://localhost:44360/api/Room')\r\n    .then((Data)=>{\r\n      setApiData(Data.data);\r\n    })\r\n   },[])\r\n\r\n  return (\r\n    <>\r\n     <Box sx={{ display: 'flex' }}>\r\n       <Sidenav/>\r\n      \r\n       <Box component=\"main\" sx={{ flexGrow: 1, p: 3,m:10 }}>\r\n       <h1>Search Room Details</h1>\r\n       <InputLabel id=\"demo-simple-select-standard-label\">Room Type</InputLabel>\r\n       <Select\r\n          labelId=\"demo-simple-select-standard-label\"\r\n          id=\"demo-simple-select-standard\"\r\n          label=\"Room Type\"\r\n          value={type}\r\n          onChange={handleChange}\r\n          sx={{width:'200px', mb:2}}\r\n        >\r\n        {apiData.map((data,index)=>{\r\n            return(\r\n          <MenuItem key={data.Room_id} value={data.Room_id}>{data.Room_Type}</MenuItem>\r\n          )\r\n          })}\r\n        </Select>\r\n\r\n      <IconButton type=\"button\" onClick={Search} sx={{ p: '10px' }} aria-label=\"search\">\r\n        <SearchIcon />\r\n      </IconButton>\r\n      \r\n      <Divider/>\r\n      {JSON.stringify(result) != '{}' && \r\n      \r\n      <TableContainer component={Paper} elevation={12}>\r\n      <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell >Room ID</TableCell>\r\n            <TableCell align=\"center\">Room Type</TableCell>\r\n            <TableCell align=\"center\">Number of Room</TableCell>\r\n            <TableCell align=\"center\">Room Rate per day</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n            <TableRow key={result.Room_id}\r\n              sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\r\n            >\r\n              <TableCell component=\"th\" scope=\"row\" style={{fontWeight:'bold', fontSize:'16px'}}>\r\n               {result.Room_id}\r\n              </TableCell>\r\n              <TableCell align=\"center\" style={{fontWeight:'bold', fontSize:'16px'}} >{result.Room_Type}</TableCell>\r\n              <TableCell align=\"center\" style={{fontWeight:'bold', fontSize:'16px'}}>{result.No_Of_Rooms}</TableCell>\r\n              <TableCell align=\"center\" style={{fontWeight:'bold', fontSize:'16px'}}>₹{result.Rates_Per_Day}</TableCell>\r\n            </TableRow>\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n      \r\n      }\r\n       </Box>\r\n    \r\n     </Box>\r\n    </>\r\n   )\r\n}\r\n\r\nexport default SearchRoom","C:\\Users\\simra\\Desktop\\HospitalManagementSystemProject\\hospital\\hospital\\react\\src\\pages\\MainPage.js",[],[],"C:\\Users\\simra\\Desktop\\HospitalManagementSystemProject\\hospital\\hospital\\react\\src\\pages\\ShiftRoom.js",[],[],"C:\\Users\\simra\\Desktop\\HospitalManagementSystemProject\\hospital\\hospital\\react\\src\\pages\\AddRoom.js",[],[],"C:\\Users\\simra\\Desktop\\HospitalManagementSystemProject\\hospital\\hospital\\react\\src\\pages\\MainMenu.js",[],[],"C:\\Users\\simra\\Desktop\\HospitalManagementSystemProject\\hospital\\hospital\\react\\src\\pages\\UpdateRoom.js",["171"],[],"C:\\Users\\simra\\Desktop\\HospitalManagementSystemProject\\hospital\\hospital\\react\\src\\pages\\UpdatePayment.js",["172"],[],"import React,{useEffect} from 'react';\r\nimport {Box,TextField,Button} from '@mui/material'\r\nimport Stack from '@mui/material/Stack';\r\nimport SideBar from '../SideBar';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport swal from 'sweetalert';\r\nimport { useFormik } from 'formik';\r\nimport * as yup from 'yup';\r\n\r\nconst UpdatePayment=({Pid})=>{\r\n    const Navigate=useNavigate();\r\n    const  InitialValues={\r\n        PaymentId:\"\",\r\n        PatientName:\"\",\r\n        Age:\"\",\r\n        Gender:\"\",\r\n        Address:\"\",\r\n        ContactNumber:\"\",\r\n        Status:\"\"\r\n    }\r\n    console.log(Pid);\r\n    useEffect(()=>{\r\n        axios.get(`https://localhost:44360/api/values/${Pid}`)\r\n        .then((Data)=>{\r\n            InitialValues.PaymentId=Data.data.PaymentId;\r\n             InitialValues.PatientName=Data.data.PatientName;\r\n             InitialValues.Age=Data.data.Age;\r\n             InitialValues.Gender=Data.data.Gender;\r\n             InitialValues.Address=Data.data.Address;\r\n             InitialValues.ContactNumber=Data.data.ContactNumber;\r\n             InitialValues.Status=Data.data.Status;\r\n        })\r\n    },[])\r\n\r\n    const validationSchema=yup.object({\r\n        \r\n        PatientName:yup.string().required(\"PatientName is required\").matches(/^[A-Z?!\\sa-z]+$/,\"Invalid Type\"),\r\n        Age:yup.number().min(1,\"Minimum is 1\").max(100,\"Maximum is 100\").required(\"Enter Between 1-100\"),\r\n        Gender:yup.string().required(\"Gender is required\"),\r\n        Address:yup.string().required(\"Address is required\"),\r\n        ContactNumber:yup.number().required(\"ContactNumber is required\"),\r\n        Status:yup.string().required(\"Status is required\")\r\n      })\r\n   \r\n      const formik=useFormik({\r\n        initialValues:InitialValues,\r\n        onSubmit:(values)=>{\r\n            console.log(JSON.stringify(values),Pid);\r\n            axios.put(`https://localhost:44360/api/values/${Pid}`,values).then(()=>{\r\n                swal(\"Updated!\",\"Details have been Updated\", \"success\").then(function(){\r\n                    Navigate(\"/ViewForDetails\");\r\n                });\r\n            })\r\n        },\r\n        validationSchema:validationSchema\r\n})\r\nreturn(\r\n    <>\r\n    <Box sx={{display:'flex'}}>\r\n        <SideBar/>\r\n        <Box component=\"main\" sx={{flexGrow:1,p:3,m:10}}>\r\n            <h2>\r\n                Update Payment Details\r\n            </h2>\r\n            <form onSubmit={formik.handleSubmit}>\r\n                <Stack spacing={2} sx={{width:'50%'}}> \r\n        <TextField\r\n        value={formik.values.PatientName}\r\n        onChange={formik.handleChange}\r\n        id=\"outlined-basic\"\r\n        name=\"PatientName\"\r\n        autoComplete='off'\r\n        label=\"PatientName\"\r\n        varient=\"outlined\"\r\n        error={formik.touched.PatientName && Boolean(formik.errors.PatientName)}\r\n        helperText={formik.touched.PatientName && formik.errors.PatientName}\r\n        onBlur={formik.handleBlur}\r\n        />\r\n        <TextField\r\n        value={formik.values.Age}\r\n        onChange={formik.handleChange}\r\n        id=\"outlined-basic\"\r\n        name=\"Age\"\r\n        autoComplete='off'\r\n        label=\"Age\"\r\n        varient=\"outlined\"\r\n        error={formik.touched.Age && Boolean(formik.errors.Age)}\r\n        helperText={formik.touched.Age && formik.errors.Age}\r\n        onBlur={formik.handleBlur}\r\n        />\r\n        <TextField\r\n        value={formik.values.Gender}\r\n        onChange={formik.handleChange}\r\n        id=\"outlined-basic\"\r\n        name=\"Gender\"\r\n        autoComplete='off'\r\n        label=\"Gender\"\r\n        varient=\"outlined\"\r\n        error={formik.touched.Gender && Boolean(formik.errors.Gender)}\r\n        helperText={formik.touched.Gender && formik.errors.Gender}\r\n        onBlur={formik.handleBlur}\r\n        />\r\n      <TextField\r\n        value={formik.values.Address}\r\n        onChange={formik.handleChange}\r\n        id=\"outlined-basic\"\r\n        name=\"Address\"\r\n        autoComplete='off'\r\n        label=\"Address\"\r\n        varient=\"outlined\"\r\n        error={formik.touched.Address && Boolean(formik.errors.Address)}\r\n        helperText={formik.touched.Address && formik.errors.Address}\r\n        onBlur={formik.handleBlur}\r\n        />\r\n        <TextField\r\n        value={formik.values.ContactNumber}\r\n        onChange={formik.handleChange}\r\n        id=\"outlined-basic\"\r\n        name=\"ContactNumber\"\r\n        autoComplete='off'\r\n        label=\"ContactNumber\"\r\n        varient=\"outlined\"\r\n        error={formik.touched.ContactNumber && Boolean(formik.errors.ContactNumber)}\r\n        helperText={formik.touched.ContactNumber && formik.errors.ContactNumber}\r\n        onBlur={formik.handleBlur}\r\n        />\r\n        <TextField\r\n        value={formik.values.Status}\r\n        onChange={formik.handleChange}\r\n        id=\"outlined-basic\"\r\n        name=\"Status\"\r\n        autoComplete='off'\r\n        label=\"Status\"\r\n        varient=\"outlined\"\r\n        error={formik.touched.Status && Boolean(formik.errors.Status)}\r\n        helperText={formik.touched.Status && formik.errors.Status}\r\n        onBlur={formik.handleBlur}\r\n        />\r\n        <Button type=\"submit\" variant='contained'>Update</Button>\r\n                </Stack>\r\n            </form>\r\n        </Box>\r\n    </Box>\r\n    </>\r\n)\r\n}\r\n\r\nexport default UpdatePayment;","C:\\Users\\simra\\Desktop\\HospitalManagementSystemProject\\hospital\\hospital\\react\\src\\pages\\GeneratePayment.js",["173","174","175","176","177","178","179"],[],"// import React,{useEffect} from 'react';\r\n// import {Box,TextField,Button} from '@mui/material'\r\n// import Paper from '@mui/material/Paper';\r\n// import Stack from '@mui/material/Stack';\r\n// import SideBar from '../SideBar';\r\n// import { useNavigate } from 'react-router-dom';\r\n// import axios from 'axios';\r\n// import swal from 'sweetalert';\r\n// import { useFormik } from 'formik';\r\n// import * as yup from 'yup';\r\n\r\n\r\n// const validationSchema=yup.object({\r\n//   Patient_Billid:yup.number().required(\"Patient_Billid is required\"),\r\n//   PatientName:yup.string().required(\"PatientName is required\").matches(/^[A-Z?!\\sa-z]+$/,\"Invalid Type\"),\r\n//   Age:yup.number().min(1,\"Minimum is 1\").max(100,\"Maximum is 100\").required(\"Enter Between 1-100\"),\r\n//   Gender:yup.string().required(\"Gender is required\"),\r\n//   Address:yup.string().required(\"Address is required\"),\r\n//   ContactNumber:yup.number().required(\"ContactNumber is required\"),\r\n//   status:yup.string().required(\"Status is required\")\r\n// })\r\n\r\n// const  GeneratePayment=()=> {\r\n//   const Navigate=useNavigate();\r\n//   const formik=useFormik({\r\n//     initialValues:{\r\n//       Patient_Billid:\"\",\r\n//       PatientName:\"\",\r\n//       Age:\"\",\r\n//       Gender:\"\",\r\n//       Address:\"\",\r\n//       ContactNumber:\"\",\r\n//       status:\"\"\r\n//   },\r\n//   onSubmit:(values)=>{\r\n//     console.log(JSON.stringify(values));\r\n//     axios.post('https://localhost:44360/api/values',values).then(()=>{\r\n//       swal(\"Added!\",\"Details have been added\", \"success\").then(function(){\r\n//         Navigate(\"/ViewForDetails\");\r\n//       });\r\n//     })\r\n//   },\r\n//   validationSchema:validationSchema\r\n\r\n//   })  \r\n\r\n//     return (\r\n//       <>\r\n//      <Box sx={{ display: 'flex'}}>\r\n//      <SideBar/>\r\n//         <Box component={Paper} sx={{ flexGrow: 1, p: 3, m: 10}}>\r\n//         <h1>Generate Payment</h1><br/> \r\n//         <form onSubmit={formik.handleSubmit}>\r\n//           <Stack spacing={2} sx={{ width: '50%' }}>\r\n//         <h2>Patient's Details</h2>\r\n\r\n//         <TextField\r\n//         value={formik.values.Patient_Billid}\r\n//         onChange={formik.handleChange}\r\n//         id=\"outlined-basic\"\r\n//         name=\"Patient_Billid\"\r\n//         autoComplete='off'\r\n//         label=\"PatientBillId\"\r\n//         varient=\"outlined\"\r\n//         error={formik.touched.Patient_Billid && Boolean(formik.errors.Patient_Billid)}\r\n//         helperText={formik.touched.Patient_Billid && formik.errors.Patient_Billid}\r\n//         onBlur={formik.handleBlur}\r\n//         />\r\n//         <TextField\r\n//         value={formik.values.PatientName}\r\n//         onChange={formik.handleChange}\r\n//         id=\"outlined-basic\"\r\n//         name=\"PatientName\"\r\n//         autoComplete='off'\r\n//         label=\"PatientName\"\r\n//         varient=\"outlined\"\r\n//         error={formik.touched.PatientName && Boolean(formik.errors.PatientName)}\r\n//         helperText={formik.touched.PatientName && formik.errors.PatientName}\r\n//         onBlur={formik.handleBlur}\r\n//         />\r\n//         <TextField\r\n//         value={formik.values.Age}\r\n//         onChange={formik.handleChange}\r\n//         id=\"outlined-basic\"\r\n//         name=\"Age\"\r\n//         autoComplete='off'\r\n//         label=\"Age\"\r\n//         varient=\"outlined\"\r\n//         error={formik.touched.Age && Boolean(formik.errors.Age)}\r\n//         helperText={formik.touched.Age && formik.errors.Age}\r\n//         onBlur={formik.handleBlur}\r\n//         />\r\n//         <TextField\r\n//         value={formik.values.Gender}\r\n//         onChange={formik.handleChange}\r\n//         id=\"outlined-basic\"\r\n//         name=\"Gender\"\r\n//         autoComplete='off'\r\n//         label=\"Gender\"\r\n//         varient=\"outlined\"\r\n//         error={formik.touched.Gender && Boolean(formik.errors.Gender)}\r\n//         helperText={formik.touched.Gender && formik.errors.Gender}\r\n//         onBlur={formik.handleBlur}\r\n//         />\r\n//       <TextField\r\n//         value={formik.values.Address}\r\n//         onChange={formik.handleChange}\r\n//         id=\"outlined-basic\"\r\n//         name=\"Address\"\r\n//         autoComplete='off'\r\n//         label=\"Address\"\r\n//         varient=\"outlined\"\r\n//         error={formik.touched.Address && Boolean(formik.errors.Address)}\r\n//         helperText={formik.touched.Address && formik.errors.Address}\r\n//         onBlur={formik.handleBlur}\r\n//         />\r\n//         <TextField\r\n//         value={formik.values.ContactNumber}\r\n//         onChange={formik.handleChange}\r\n//         id=\"outlined-basic\"\r\n//         name=\"ContactNumber\"\r\n//         autoComplete='off'\r\n//         label=\"ContactNumber\"\r\n//         varient=\"outlined\"\r\n//         error={formik.touched.ContactNumber && Boolean(formik.errors.ContactNumber)}\r\n//         helperText={formik.touched.ContactNumber && formik.errors.ContactNumber}\r\n//         onBlur={formik.handleBlur}\r\n//         />\r\n\r\n//         <TextField\r\n//         value={formik.values.Status}\r\n//         onChange={formik.handleChange}\r\n//         id=\"outlined-basic\"\r\n//         name=\"status\"\r\n//         autoComplete='off'\r\n//         label=\"status\"\r\n//         varient=\"outlined\"\r\n//         error={formik.touched.status && Boolean(formik.errors.status)}\r\n//         helperText={formik.touched.status && formik.errors.status}\r\n//         onBlur={formik.handleBlur}\r\n//         />\r\n//         <Button type=\"Submit\" variant='contained'>Add</Button>\r\n//     </Stack> \r\n//     </form>\r\n//         </Box>\r\n//      </Box>\r\n\r\n//       </>\r\n//     );\r\n//   }\r\n\r\n//   export default GeneratePayment;\r\n\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport swal from \"sweetalert\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Stack from \"@mui/material/Stack\";\r\nimport SearchIcon from \"@mui/icons-material/Search\";\r\nimport Button from \"@mui/material/Button\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport { InputAdornment, TextField } from \"@mui/material\";\r\nimport Divider from \"@mui/material/Divider\";\r\nimport Side from \"../Side\";\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport Select from '@mui/material/Select';\r\nimport InputLabel from '@mui/material/InputLabel';\r\n\r\n\r\nconst GeneratePayment = ({ Bill_Id }) => {\r\n  const [data, setData] = useState({});\r\n  const [Status, setStatus] = useState(\" \");\r\n  useEffect(() => {\r\n    axios.get(`https://localhost:44360/api/Bill/${Bill_Id}`)\r\n      .then((Data) => {\r\n        setData(Data.data);\r\n      })\r\n  }, [])\r\n\r\n  const handleChange=(e)=>{\r\n     setStatus(e.target.value);\r\n  }\r\n\r\n  const submit=(e)=>{\r\n     e.preventDefault();\r\n     const values={\r\n      \"Patient_Bill_Id\":Bill_Id,\r\n      \"Status\":Status\r\n     }\r\n     axios.post(`https://localhost:44360/api/Values/`,values);\r\n       \r\n  }\r\n\r\n\r\n  return (\r\n    <>\r\n      <Box sx={{ display: \"flex\" }}>\r\n        <Side />\r\n        <Box component=\"main\" sx={{ flexGrow: 1, p: 3, m: 10 }}>\r\n          <h1>Payout Window</h1>\r\n          <Divider />\r\n          <form>\r\n            <Stack spacing={2} sx={{ width: \"50%\", mt: 5 }}>\r\n              <TextField\r\n               autoFocus\r\n                value={data.Patient_Name}\r\n                name=\"Patient_Name\"\r\n                    autoComplete=\"off\"\r\n                    label=\"Patient_Name\"\r\n                    hiddenLabel\r\n              id=\"filled-hidden-label-normal\"\r\n              variant=\"filled\"\r\n              />\r\n              <TextField\r\n              autoFocus\r\n                value={data.Doctor_Name}\r\n                name=\"Doctor_Name\"\r\n                    autoComplete=\"off\"\r\n                    label=\"Doctor_Name\"\r\n                    hiddenLabel\r\n              id=\"filled-hidden-label-normal\"\r\n              variant=\"filled\"\r\n              />\r\n              <TextField\r\n                autoFocus\r\n                value={data.Room_Bill}\r\n                name=\"Room_Bill\"\r\n                autoComplete=\"off\"\r\n                label=\"Room_Bill\"\r\n                hiddenLabel\r\n              id=\"filled-hidden-label-normal\"\r\n              variant=\"filled\"\r\n              />\r\n              <TextField\r\n                autoFocus\r\n                value={data.Doctor_Bill}\r\n                name=\"Doctor_Bill\"\r\n                autoComplete=\"off\"\r\n                label=\"Doctor_Bill\"\r\n                hiddenLabel\r\n                id=\"filled-hidden-label-normal\"\r\n                variant=\"filled\"\r\n              />\r\n              <TextField\r\n             \r\n                autoFocus\r\n                value={data.Medicine_Bill}\r\n                name=\"Medicine_Bill\"\r\n                autoComplete=\"off\"\r\n                label=\"Medicine_Bill\"\r\n                hiddenLabel\r\n                id=\"filled-hidden-label-normal\"\r\n                variant=\"filled\"\r\n              />\r\n              <TextField\r\n                \r\n                autoFocus \r\n                value={data.Total_Bill}\r\n                name=\"Total_Bill\"\r\n                autoComplete=\"off\"\r\n                label=\"Total_Bill\"\r\n                hiddenLabel\r\n              id=\"filled-hidden-label-normal\"\r\n              variant=\"filled\"\r\n              />\r\n              <Select\r\n                labelId=\"demo-simple-select-standard-label\"\r\n                id=\"demo-simple-select-standard\"\r\n                label=\"Status\"\r\n                value={Status}\r\n                onChange={handleChange}\r\n                sx={{ width: '200px', mb: 2 }}\r\n              >\r\n                 <MenuItem value=\"Paid\">Paid</MenuItem>\r\n                 <MenuItem value=\"Pending\">Pending</MenuItem>\r\n              </Select>\r\n              <Button type=\"submit\" onClick={submit} variant=\"contained\">Proceed</Button>\r\n            </Stack>\r\n          </form>\r\n        </Box>\r\n      </Box>\r\n\r\n    </>\r\n  )\r\n\r\n}\r\nexport default GeneratePayment;","C:\\Users\\simra\\Desktop\\HospitalManagementSystemProject\\hospital\\hospital\\react\\src\\pages\\ViewForDetails.js",[],[],"C:\\Users\\simra\\Desktop\\HospitalManagementSystemProject\\hospital\\hospital\\react\\src\\pages\\ViewRoomAndDoctor.js",[],[],"C:\\Users\\simra\\Desktop\\HospitalManagementSystemProject\\hospital\\hospital\\react\\src\\pages\\SearchForDetails.js",["180"],[],"import React, { useEffect, useState } from 'react';\r\nimport Box from '@mui/material/Box'\r\nimport Paper from '@mui/material/Paper';\r\nimport SideBar from '../SideBar';\r\nimport SearchIcon from '@mui/icons-material/Search';\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport Divider from '@mui/material/Divider';\r\nimport Button from '@mui/material/Button';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport InputLabel from '@mui/material/InputLabel';\r\nimport axios from 'axios';\r\nimport Select from '@mui/material/Select';\r\n\r\nconst  SearchForDetails=()=>\r\n{\r\n  const[apiData,setApiData]=useState([]);\r\n  const[result,setResult]=useState({});\r\n  const[PaymentId,setPaymentId]=useState('');\r\n\r\n  const handleChange=(e)=>{\r\n    setPaymentId(e.target.value);\r\n  }\r\n\r\n  const Search=()=>{\r\n    axios.get(`https://localhost:44360/api/values/${PaymentId}`)\r\n    .then((Data)=>{\r\n      setResult(Data.data);\r\n    })\r\n    console.log(PaymentId);\r\n  }\r\n  console.log(result);\r\n  useEffect(()=>{\r\n    axios.get('https://localhost:44360/api/values')\r\n    .then((Data)=>{\r\n      setApiData(Data.data);\r\n    })\r\n  },[])\r\n    return(\r\n        <>\r\n          <Box sx={{ display: 'flex'}}>\r\n          <SideBar/>\r\n            <Box component=\"main\" sx={{ flexGrow: 1, p: 3, m: 10}}>\r\n             <h1>Search For Payment Details</h1>\r\n          \r\n            <InputLabel id=\"demo-simple-select-standard-label\">PaymentId</InputLabel>\r\n            <Select \r\n                labelId=\"demo-simple-select-standared-label\"\r\n                id=\"demo-simple-select-standard\"\r\n                label=\"PaymentId\"\r\n                value={PaymentId}\r\n                onChange={handleChange}\r\n                sx={{width:'200px',mb:2}}\r\n                >\r\n                  {apiData.map((data,index)=>{\r\n                    return(\r\n                      <MenuItem key={data.PaymentId} value={data.PaymentId}>{data.PaymentId}</MenuItem>\r\n                    )\r\n                  })}\r\n                </Select>\r\n\r\n             <br/><Button variant=\"outlined\"  onClick={Search} startIcon={<SearchIcon />}>\r\n                  Search\r\n            </Button>\r\n             <br/>\r\n             <Divider/>\r\n             {JSON.stringify(result)!='{}' &&\r\n\r\n              <TableContainer component={Paper} elevation={12}>\r\n                <Table sx={{minwidth:650}} aria-label=\"simple table\">\r\n                  <TableHead>\r\n                    <TableRow>\r\n                    <TableCell >PaymentId</TableCell>\r\n                    <TableCell >PatientBillId</TableCell>\r\n                      <TableCell align=\"center\">PatientName</TableCell>\r\n                      <TableCell align=\"center\">Age</TableCell>\r\n                      <TableCell align=\"center\">Gender</TableCell>\r\n                      <TableCell align=\"center\">Address</TableCell>\r\n                      <TableCell align=\"center\">ContactNumber</TableCell>\r\n                      <TableCell align=\"center\">TotalBill</TableCell>\r\n                      <TableCell align=\"center\">Status</TableCell>\r\n                    </TableRow>\r\n                  </TableHead>\r\n                  <TableBody>\r\n                    <TableRow key={result.PaymentId}\r\n                       sx={{'&:last-child td, &:last-child th':{border:0 }}}\r\n                      >\r\n                        <TableCell component=\"th\" scope=\"row\" style={{fontWeight:'bold',fontsize:'16px'}}>{result.PaymentId}</TableCell>\r\n                        <TableCell align=\"center\" style={{fontWeight:'bold',fontsize:'16px'}}>{result.Patient_Billid}</TableCell>\r\n                        <TableCell align=\"center\" style={{fontWeight:'bold',fontsize:'16px'}}>{result.PatientName}</TableCell>\r\n                        <TableCell align=\"center\" style={{fontWeight:'bold',fontsize:'16px'}}>{result.Age}</TableCell>\r\n                        <TableCell align=\"center\" style={{fontWeight:'bold',fontsize:'16px'}}>{result.Gender}</TableCell>\r\n                        <TableCell align=\"center\" style={{fontWeight:'bold',fontsize:'16px'}}>{result.Address}</TableCell>\r\n                        <TableCell align=\"center\" style={{fontWeight:'bold',fontsize:'16px'}}>{result.ContactNumber}</TableCell>\r\n                        <TableCell align=\"center\" style={{fontWeight:'bold',fontsize:'16px'}}>₹{result.Total_Bill}</TableCell>\r\n                        <TableCell align=\"center\" style={{fontWeight:'bold',fontsize:'16px'}}>{result.Status}</TableCell>\r\n                      </TableRow>\r\n                  </TableBody>\r\n                </Table>\r\n              </TableContainer>\r\n             }\r\n\r\n            </Box>\r\n          </Box>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SearchForDetails;","C:\\Users\\simra\\Desktop\\HospitalManagementSystemProject\\hospital\\hospital\\react\\src\\pages\\AddRoomAndDoctor.js",["181","182"],[],"import React, { useState, useEffect } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport swal from \"sweetalert\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Paper from \"@mui/material/Paper\";\r\nimport Stack from \"@mui/material/Stack\";\r\nimport SearchIcon from \"@mui/icons-material/Search\";\r\nimport Button from \"@mui/material/Button\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport { InputAdornment, TextField } from \"@mui/material\";\r\nimport Divider from \"@mui/material/Divider\";\r\nimport Select from '@mui/material/Select';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport InputLabel from '@mui/material/InputLabel';\r\nimport SideMenu from \"../SideMenu\";\r\n\r\nconst AddRoomAndDoctor = () => {\r\n  const Navigate=useNavigate();\r\n  const [pid, setPid] = useState(\" \");\r\n  const [result, setResult] = useState({});\r\n  const [room, setRoom] = useState([]);\r\n  const [Rid, setRid] = useState(\" \");\r\n  const [doctor, setDoctor] = useState([]);\r\n  const [Did, setDid] = useState(\" \");\r\n  const [roomType,setroomType]=useState(\" \");\r\n  const [doctorName,setdoctorName]=useState(\" \");\r\n\r\n  \r\n  const handleChange=(e)=>{\r\n    setRid(e.target.value);\r\n  }\r\n  const handleChange2=(e)=>{\r\n    setDid(e.target.value);\r\n  }\r\n  \r\n\r\n  //Room Data\r\n  useEffect(() => {\r\n    axios.get(\"https://localhost:44360/api/Room\").then((Data) => {\r\n      setRoom(Data.data);\r\n    });\r\n  }, []);\r\n\r\n  //Doctor Data\r\n  useEffect(() => {\r\n    axios.get(\"https://localhost:44360/api/Doctor\").then((Data) => {\r\n      setDoctor(Data.data);\r\n    });\r\n  }, []);\r\n\r\n\r\n  const Search = () => {\r\n    const id = parseInt(pid);\r\n\r\n    axios\r\n      .get(`https://localhost:44360/api/PatientWebAPI/${id}`)\r\n      .then((Data) => {\r\n        setResult(Data.data);\r\n        \r\n      })\r\n      .catch(() => {\r\n        setResult({});\r\n      });\r\n  };\r\n  \r\n  const {Patient_Id,Patient_Condition,Patient_Name} = result;\r\n \r\n  const submit=(e)=>{\r\n    e.preventDefault();\r\n    const value={\r\n      \"Room_Id\":Rid,\r\n      \"Patient_Id\":Patient_Id,\r\n      \"Doctor_Name\":doctorName,\r\n      \"Patient_Condition\":Patient_Condition,\r\n      \"Doctor_Id\":Did,\r\n      \"Patient_Name\":Patient_Name,\r\n      \"Room_Type\":roomType\r\n    }\r\n\r\n    axios.post('https://localhost:44360/api/AssignRoomAndDoctor',value).then(()=>{\r\n      swal(\"Assign!\", \"Room And Doctor has been assigned\", \"success\").then(function () {\r\n        Navigate(\"/ViewAssignment\");\r\n      }); \r\n    \r\n      }).catch(() => {\r\n        swal(\"Sorry!\", \"No Room Available\", \"Error\");\r\n      })\r\n   \r\n    \r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Box sx={{ display: \"flex\" }}>\r\n        <SideMenu />\r\n        <Box component=\"main\" sx={{ flexGrow: 1, p: 3, m: 10 }}>\r\n          <h1>Assign Room Details</h1>\r\n          <TextField\r\n            value={pid}\r\n            id=\"outlined-basic\"\r\n            name=\"type\"\r\n            autoComplete=\"off\"\r\n            label=\"Enter Patient Id.\"\r\n            variant=\"outlined\"\r\n            sx={{ mb: 2 }}\r\n            onChange={(e) => {\r\n              setPid(e.target.value);\r\n            }}\r\n          />\r\n\r\n          <IconButton\r\n            type=\"button\"\r\n            onClick={Search}\r\n            sx={{ mt: 1 }}\r\n            aria-label=\"search\"\r\n          >\r\n            <SearchIcon />\r\n          </IconButton>\r\n\r\n          <Divider />\r\n          {JSON.stringify(result) === \"{}\" && <h1>Result Not found</h1>}\r\n          {JSON.stringify(result) !== \"{}\" && (\r\n            <Box component=\"main\" sx={{ flexGrow: 1, p: 3, m: 4 }}>\r\n              <form>\r\n                <Stack spacing={2} sx={{ width: \"50%\" }}>\r\n                  <TextField\r\n                    disabled\r\n                    value={result.Patient_Name}\r\n                    name=\"type\"\r\n                    autoComplete=\"off\"\r\n                    label=\"Patient Name\"\r\n                    variant=\"outlined\"\r\n                    id=\"outlined-disabled\"\r\n                  />\r\n                  <TextField\r\n                    disabled\r\n                    value={result.Patient_Condition}\r\n                    name=\"noOfRoom\"\r\n                    autoComplete=\"off\"\r\n                    label=\"Patient Condition\"\r\n                    variant=\"outlined\"\r\n                    id=\"outlined-disabled\"\r\n                  />\r\n                  <TextField\r\n                    disabled\r\n                    value={result.Patient_Condition}\r\n                    name=\"noOfRoom\"\r\n                    autoComplete=\"off\"\r\n                    label=\"Patient Condition\"\r\n                    variant=\"outlined\"\r\n                    id=\"outlined-disabled\"\r\n                  />\r\n                  <InputLabel id=\"demo-simple-select-standard-label\">\r\n                    Room Type\r\n                  </InputLabel>\r\n                  <Select\r\n                    labelId=\"demo-simple-select-standard-label\"\r\n                    id=\"demo-simple-select-standard\"\r\n                    label=\"Room Type\"\r\n                    value={Rid}\r\n                    onChange={handleChange}\r\n                    sx={{ width: \"100%\", mb: 2 }}\r\n                  >\r\n                    {room.map((data, index) => {\r\n                      return (\r\n                        <MenuItem key={data.Room_id} onClick={()=>{setroomType(data.Room_Type)}} value={data.Room_id}>\r\n                          {data.Room_Type}\r\n                        </MenuItem>\r\n                      );\r\n                    })}\r\n                  </Select>\r\n                  <InputLabel id=\"demo-simple-select-standard-label\">\r\n                    Doctor Name\r\n                  </InputLabel>\r\n                  <Select\r\n                    labelId=\"demo-simple-select-standard-label\"\r\n                    id=\"demo-simple-select-standard\"\r\n                    label=\"Room Type\"\r\n                    value={Did}\r\n                    onChange={handleChange2}\r\n                    sx={{ width: \"100%\", mb: 2 }}\r\n                  >\r\n                    {doctor.map((data, index) => {\r\n                      return (\r\n                        <MenuItem key={data.Doctor_Id} onClick={()=>{setdoctorName(data.Doctor_Name)}} value={data.Doctor_Id}>\r\n                            Dr.{data.Doctor_Name}________Spec in:{data.Speciliazation}    \r\n                        </MenuItem>\r\n                      );\r\n                    })}\r\n                  </Select>\r\n                  <Button type=\"submit\" onClick={submit} variant=\"contained\" >ADD</Button>\r\n                </Stack>\r\n                \r\n              </form>\r\n            </Box>\r\n          )}\r\n        </Box>\r\n      </Box>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AddRoomAndDoctor;\r\n","C:\\Users\\simra\\Desktop\\HospitalManagementSystemProject\\hospital\\hospital\\react\\src\\pages\\Bill.js",[],[],"C:\\Users\\simra\\Desktop\\HospitalManagementSystemProject\\hospital\\hospital\\react\\src\\pages\\login.js",[],[],"C:\\Users\\simra\\Desktop\\HospitalManagementSystemProject\\hospital\\hospital\\react\\src\\pages\\Payout.js",["183","184","185"],[],"import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport Typography from '@mui/material/Typography';\r\nimport List from '@mui/material/List';\r\nimport ListItem from '@mui/material/ListItem';\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport Grid from '@mui/material/Grid';\r\nimport {Stack,Button, Paper} from '@mui/material';\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport swal from 'sweetalert';\r\nimport Box from \"@mui/material/Box\";\r\n\r\n\r\n\r\n\r\n const Payout =({billId}) =>{\r\n    const Navigate=useNavigate();\r\n    const [data, setData] = useState({});\r\n    const [Status, setStatus] = useState(\"Paid\");\r\n    \r\n    useEffect(() => {\r\n        axios.get(`https://localhost:44360/api/Bill/${billId}`)\r\n          .then((Data) => {\r\n            setData(Data.data);\r\n          })\r\n      }, [])\r\n\r\n    const payments = [\r\n        { name: 'Card type', detail: 'Visa' },\r\n        { name: 'Card holder', detail: data.Patient_Name },\r\n        { name: 'Card number', detail: 'xxxx-xxxx-xxxx-1234' },\r\n      ];\r\n\r\n      const submit=(e)=>{\r\n        e.preventDefault();\r\n        const values={\r\n         \"Patient_Bill_Id\":billId,\r\n         \"Status\":Status\r\n        }\r\n        axios.post(`https://localhost:44360/api/Values/`,values).then(()=>{\r\n            swal(\"Success!\", \"Payment have been Made\", \"success\").then(function () {\r\n              Navigate(\"/ViewBill\");\r\n            }); \r\n          \r\n            })\r\n          \r\n     }\r\n   \r\n\r\n  return (\r\n    <Box sx={{ display: \"flex\" }}>\r\n      <Box component=\"main\" sx={{ flexGrow: 1, p: 3, m: 10 }}>\r\n    <React.Fragment style={{fontWeight:'bold', fontSize:'16px'}}>\r\n        <Stack sx={{width:'500px', display:'flex', justifyContent:'center', alignItem:\"center\", ml:50,mt:15}} >\r\n      <Typography variant=\"h6\" gutterBottom>\r\n        <h1>Bill Summary</h1>\r\n      </Typography>\r\n      <List disablePadding>\r\n      <ListItem  sx={{ py: 1, px: 0 }}>\r\n            <ListItemText sx={{ fontWeight: 700 }} primary=\"Patient Name\"/>\r\n            <Typography variant=\"body2\" sx={{ fontWeight: 700 }}>{data.Patient_Name}</Typography>\r\n          </ListItem>\r\n          <ListItem  sx={{ py: 1, px: 0 }}>\r\n            <ListItemText primary=\"Doctor Name\"/>\r\n            <Typography variant=\"body2\" sx={{ fontWeight: 700 }}>{data.Doctor_Name}</Typography>\r\n          </ListItem>\r\n          \r\n          <ListItem  sx={{ py: 1, px: 0 , fontSize:\"36px\"}}>\r\n            <ListItemText primary=\"Room Bill\" secondary={data.Room_Type} />\r\n            <Typography variant=\"body2\" sx={{ fontWeight: 700 }}>₹{data.Room_Bill}</Typography>\r\n          </ListItem>\r\n          <ListItem  sx={{ py: 1, px: 0 }}>\r\n            <ListItemText primary=\"Doctor Bill\"/>\r\n            <Typography variant=\"body2\" sx={{ fontWeight: 700 }}>₹{data.Doctor_Bill}</Typography>\r\n          </ListItem>\r\n          <ListItem  sx={{ py: 1, px: 0 }}>\r\n            <ListItemText primary=\"Medicine Bill\"  />\r\n            <Typography variant=\"body2\" sx={{ fontWeight: 700 }}>₹{data.Medicine_Bill}</Typography>\r\n          </ListItem>\r\n\r\n        <ListItem sx={{ py: 1, px: 0 }}>\r\n          <ListItemText primary=\"Total Bill\" />\r\n          <Typography variant=\"subtitle1\" sx={{ fontWeight: 700 }}>\r\n          ₹{data.Total_Bill}\r\n          </Typography>\r\n        </ListItem>\r\n      </List>\r\n      <Grid container spacing={2}>\r\n        <Grid item container direction=\"column\" xs={12} sm={6}>\r\n          <Typography variant=\"h6\" gutterBottom sx={{ mt: 2 }}>\r\n            Payment details\r\n          </Typography>\r\n          <Grid container>\r\n            {payments.map((payment) => (\r\n              <React.Fragment key={payment.name}>\r\n                <Grid item xs={6}>\r\n                  <Typography gutterBottom>{payment.name}</Typography>\r\n                </Grid>\r\n                <Grid item xs={6}>\r\n                  <Typography gutterBottom>{payment.detail}</Typography>\r\n                </Grid>\r\n              </React.Fragment>\r\n            ))}\r\n             <Grid item xs={6}>\r\n                <Button type=\"submit\" onClick={submit} variant=\"contained\">Pay</Button>\r\n                </Grid>\r\n          </Grid>\r\n\r\n        </Grid>\r\n      </Grid>\r\n      </Stack>\r\n    </React.Fragment>\r\n    </Box>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default Payout;","C:\\Users\\simra\\Desktop\\HospitalManagementSystemProject\\hospital\\hospital\\react\\src\\pages\\SearchRoomAndDoctor.js",[],[],"C:\\Users\\simra\\Desktop\\HospitalManagementSystemProject\\hospital\\hospital\\react\\src\\pages\\Doctor\\Doctor.js",["186","187","188","189"],[],"import React, { useState, useEffect, Fragment } from \"react\";\r\nimport Table from 'react-bootstrap/Table';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport Container from 'react-bootstrap/Container';\r\nimport './Styles.css'\r\nimport Col from 'react-bootstrap/Col';\r\nimport axios from \"axios\"\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css'\r\nimport { Link } from \"react-router-dom\";\r\n\r\n\r\n\r\n\r\nconst Doctor = () => {\r\n\r\n    const [show, setShow] = useState(false);\r\n\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => setShow(false);\r\n\r\n    const [Doctor_Id, setDoctor_id] = useState('')\r\n    const [Doctor_Name, setDoctor_Name] = useState('')\r\n    const [Contact_No, setContact_No] = useState('')\r\n    const [Speciliazation, setSpeciliazation] = useState('')\r\n    const [Charges_Per_Day, setCharges] = useState('')\r\n\r\n    const [EditDoctor_Id, setEditDoctor_id] = useState('')\r\n    const [EditDoctor_Name, setEditDoctor_Name] = useState('')\r\n    const [EditContact_No, setEditContact_No] = useState('')\r\n    const [EditSpeciliazation, setEditSpeciliazation] = useState('')\r\n    const [EditCharges_Per_Day, setEditCharges] = useState('')\r\n\r\n    const [idError, setIdError] = useState('')\r\n    const [nameError, setDoctorNameError] = useState('')\r\n    const [contactError, setContactError] = useState('')\r\n    const [specilizationError, setSpecilizationError] = useState('')\r\n    const [chargesError, setChargesError] = useState('')\r\n\r\n\r\n\r\n\r\n    const [data, setData] = useState([])\r\n\r\n    useEffect(() => {\r\n        getData();\r\n    }, [])\r\n\r\n    const getData = () => {\r\n        axios.get('https://localhost:44360/api/Doctor/')\r\n            .then((result) => {\r\n                setData(result.data)\r\n            })\r\n            .catch((error) => {\r\n                console.log(error)\r\n            })\r\n\r\n    }\r\n\r\n    const handleEdit = (id) => {\r\n\r\n        handleShow();\r\n        axios.get(`https://localhost:44360/api/Doctor/${id}`)\r\n            .then((result) => {\r\n                setEditDoctor_id(result.data.Doctor_Id);\r\n                setEditDoctor_Name(result.data.Doctor_Name);\r\n                setEditContact_No(result.data.Contact_No);\r\n                setEditSpeciliazation(result.data.Speciliazation);\r\n                setEditCharges(result.data.Charges_Per_Day)\r\n            })\r\n            .catch((error) => {\r\n                console.log(error)\r\n            })\r\n    }\r\n\r\n    const handleDelete = (id) => {\r\n        if (window.confirm(\"Are you sure want to delete this record\") === true) {\r\n            axios.delete(`https://localhost:44360/api/Doctor/${id}`)\r\n                .then((result) => {\r\n                    clear();\r\n                    toast.success('Doctor has been Deleted');\r\n                    getData();\r\n                }).catch((error) => {\r\n                    toast.error(error);\r\n                })\r\n\r\n        }\r\n        alert(id);\r\n    }\r\n    const handleUpdate = () => {\r\n        const url = `https://localhost:44360/api/Doctor/${EditDoctor_Id}`;\r\n        const data = {\r\n            \"Doctor_Id\": EditDoctor_Id,\r\n            \"Doctor_Name\": EditDoctor_Name,\r\n            \"Contact_No\": EditContact_No,\r\n            \"Speciliazation\": EditSpeciliazation,\r\n            \"Charges_Per_Day\": EditCharges_Per_Day\r\n        }\r\n\r\n        axios.put(url, data)\r\n            .then((result) => {\r\n                getData();\r\n                clear();\r\n                toast.success('Doctor has been Updated');\r\n            }).catch((error) => {\r\n                toast.error(error)\r\n            })\r\n\r\n    }\r\n    const handleSave = () => {\r\n        const url = 'https://localhost:44360/api/Doctor/';\r\n        const data = {\r\n            \"Doctor_Id\": Doctor_Id,\r\n            \"Doctor_Name\": Doctor_Name,\r\n            \"Contact_No\": Contact_No,\r\n            \"Speciliazation\": Speciliazation,\r\n            \"Charges_Per_Day\": Charges_Per_Day\r\n        }\r\n        if (Doctor_Id === '') {\r\n            setIdError('ID is required');\r\n        } else if (!/^\\d+$/.test(Doctor_Id)) {\r\n            setIdError('ID must be a number');\r\n        } else {\r\n            setIdError('');\r\n        }\r\n        if (Doctor_Name === '') {\r\n            setDoctorNameError('Doctor name   is required');\r\n        }\r\n\r\n        else if (!/^[a-zA-Z]+$/.test(Doctor_Name)) {\r\n            setDoctorNameError('Doctor name should contain only alphabets');\r\n        }\r\n        else {\r\n            setDoctorNameError('');\r\n        }\r\n\r\n\r\n        if (Contact_No === '') {\r\n            setContactError('Contact number cannot be empty ');\r\n        } else if (Contact_No.length !== 10) {\r\n            setContactError('Contact number should have 10 digits');\r\n        } else {\r\n            setContactError('');\r\n        }\r\n        if (!Speciliazation) {\r\n            setSpecilizationError('Specilization cannot be empty')\r\n            return false;\r\n        }\r\n        else {\r\n            setSpecilizationError('');\r\n        }\r\n        if (!Charges_Per_Day) {\r\n            setChargesError('Charges Cannot be empty')\r\n            return false;\r\n        }\r\n        else if (!/^\\d+$/.test(Charges_Per_Day)) {\r\n            setChargesError('Charges should contain only numbers');\r\n        } else {\r\n            setChargesError('')\r\n        }\r\n\r\n\r\n\r\n\r\n        if ((Doctor_Id !== '') && (/^\\d+$/.test(Doctor_Id)) && (Doctor_Name !== '') && (/^[a-zA-Z]+$/.test(Doctor_Name)) && (Contact_No !== '') && (Contact_No.length == 10) && (Speciliazation !== '') && (/^[a-zA-Z]+$/.test(Speciliazation)) && (Charges_Per_Day !== '') && (/^\\d+$/.test(Charges_Per_Day))) {\r\n\r\n\r\n\r\n            axios.post(url, data)\r\n                .then((result) => {\r\n                    getData();\r\n                    clear();\r\n                    toast.success('Doctor has been added');\r\n                }).catch((error) => {\r\n                    toast.error(error)\r\n                })\r\n        }\r\n    }\r\n\r\n    const clear = () => {\r\n        setDoctor_id('');\r\n        setDoctor_Name('');\r\n        setContact_No('');\r\n        setSpeciliazation('');\r\n        setCharges('');\r\n        setEditDoctor_id('');\r\n        setEditDoctor_Name('');\r\n        setEditContact_No('');\r\n        setEditSpeciliazation('');\r\n        setEditCharges('');\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <Fragment>\r\n            <ToastContainer />\r\n            <Container>\r\n\r\n                <h1>Doctor Details Management</h1>\r\n                <div className=\"first\">\r\n\r\n                    <Col>\r\n                        <Col><input type=\"text\" className=\" input\" placeholder=\"Enter Doctor_ id\" value={Doctor_Id} onChange={(e) => setDoctor_id(e.target.value)} /><b />{idError && <p>{idError}</p>}</Col>\r\n                        <Col><input type=\"text\" className=\" input\" placeholder=\"Enter Doctor_Name\" value={Doctor_Name} onChange={(e) => setDoctor_Name(e.target.value)} /><b />{nameError && <p>{nameError}</p>}</Col>\r\n                        <Col><input type=\"text\" className=\" input\" placeholder=\"Enter Contact_No\" value={Contact_No} onChange={(e) => setContact_No(e.target.value)} /><b />{contactError && <p>{contactError}</p>}</Col>\r\n                        <Col><input type=\"text\" className=\" input\" placeholder=\"Enter Speciliazation\" value={Speciliazation} onChange={(e) => setSpeciliazation(e.target.value)} /><b />{specilizationError && <p>{specilizationError}</p>}</Col>\r\n                        <Col><input type=\"text\" className=\" input\" placeholder=\"Enter Charges per day\" value={Charges_Per_Day} onChange={(e) => setCharges(e.target.value)} /><b />{chargesError && <p>{chargesError}</p>}</Col>\r\n                        <Col><button onClick={handleSave}>Add Doctor</button></Col>\r\n                        <br />\r\n                        <br />\r\n                        <Col><Link to={'/dashboard'}><button>Back to Home</button></Link></Col>\r\n\r\n                    </Col>\r\n\r\n\r\n                </div>\r\n            </Container>\r\n            <br></br>\r\n            <Table striped bordered hover>\r\n                <thead>\r\n                    <tr>\r\n                        <th>#</th>\r\n                        <th>Doctor_Id</th>\r\n                        <th>Doctor_Name</th>\r\n                        <th>Contact_No</th>\r\n                        <th>Speciliazation</th>\r\n                        <th>Charges per Day</th>\r\n                        <th>Actions</th>\r\n                    </tr>\r\n                    <td></td>\r\n                    <td><input type='text' className=\" form-control\" value={EditDoctor_Id} onChange={(e) => setEditDoctor_id(e.target.value)} /></td>\r\n                    <td><input type='text' className=\" form-control\" value={EditDoctor_Name} onChange={(e) => setEditDoctor_Name(e.target.value)} /></td>\r\n                    <td><input type='text' className=\" form-control\" value={EditContact_No} onChange={(e) => setEditContact_No(e.target.value)} /></td>\r\n                    <td><input type='text' className=\" form-control\" value={EditSpeciliazation} onChange={(e) => setEditSpeciliazation(e.target.value)} /></td>\r\n                    <td><input type='text' className=\" form-control\" value={EditCharges_Per_Day} onChange={(e) => setEditCharges(e.target.value)} /></td>\r\n                    <Button variant=\"primary\" onClick={handleUpdate}>\r\n                        Save Changes\r\n                    </Button>\r\n                </thead>\r\n                <tbody>\r\n                    {\r\n                        data && data.length > 0 ?\r\n                            data.map((item, index) => {\r\n                                return (\r\n                                    <tr key={index}>\r\n                                        <td>{index + 1}</td>\r\n                                        <td>{item.Doctor_Id}</td>\r\n                                        <td>{item.Doctor_Name}</td>\r\n                                        <td>{item.Contact_No}</td>\r\n                                        <td>{item.Speciliazation}</td>\r\n                                        <td>{item.Charges_Per_Day}</td>\r\n                                        <td colSpan={2}>\r\n                                            <button className=\"btn btn-primary\" onClick={() => handleEdit(item.Doctor_Id)} >Edit</button>\r\n                                            <button className=\"btn btn-danger\" onClick={() => handleDelete(item.Doctor_Id)}>Delete</button>\r\n                                        </td>\r\n                                    </tr>\r\n\r\n                                )\r\n                            })\r\n                            :\r\n                            'Loading..'\r\n                    }\r\n\r\n\r\n                </tbody>\r\n            </Table>\r\n\r\n           \r\n        </Fragment>\r\n    )\r\n\r\n\r\n\r\n\r\n}\r\nexport default Doctor;","C:\\Users\\simra\\Desktop\\HospitalManagementSystemProject\\hospital\\hospital\\react\\src\\pages\\Bill\\ViewBill.js",["190"],[],"import React,{useEffect,useState} from 'react'\r\nimport {Button} from '@mui/material';\r\nimport Box from '@mui/material/Box';\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport Paper from '@mui/material/Paper';\r\nimport {Link} from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport BorderColorIcon from '@mui/icons-material/BorderColor';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport Side from '../../Side';\r\nimport ReceiptIcon from '@mui/icons-material/Receipt';\r\n\r\nconst ViewBill = ({billId,setBillId}) => {\r\n  const[apiData,setApiData]=useState([]);\r\n\r\n  useEffect(() => {\r\n    axios.get('https://localhost:44360/api/Bill')\r\n    .then((Data)=>{\r\n     console.log(Data)\r\n      setApiData(Data.data);\r\n    })\r\n   },[])\r\n\r\n   const getData=()=>{\r\n    axios.get('https://localhost:44360/api/Bill')\r\n    .then((Data)=>{\r\n     console.log(Data )\r\n      setApiData(Data.data);\r\n    })\r\n   }\r\n\r\n   \r\n   const Delete=(id)=>{\r\n    axios.delete(`https://localhost:44360/api/Bill/${id}`)\r\n    .then(()=>{\r\n      getData();\r\n    })\r\n   }\r\n\r\n  return (\r\n   <>\r\n    <Box sx={{ display: 'flex' }}>\r\n      <Side/>\r\n     \r\n      <Box component=\"main\" sx={{ flexGrow: 1, p: 3,m:10 }}>\r\n      <h1>Details of Bills</h1>\r\n      <TableContainer component={Paper} elevation={12}>\r\n      <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\r\n        <TableHead>\r\n          <TableRow>\r\n          <TableCell style={{fontWeight:'bold'}}>Bill_ID</TableCell>\r\n          <TableCell align=\"right\" style={{fontWeight:'bold'}}>Bill Date</TableCell>\r\n            <TableCell align=\"right\" style={{fontWeight:'bold'}}>Patient_Name</TableCell>\r\n            <TableCell align=\"right\" style={{fontWeight:'bold'}}>Doctor_Name</TableCell>\r\n            <TableCell align=\"right\" style={{fontWeight:'bold'}}>Room_Bill</TableCell>\r\n            <TableCell align=\"right\" style={{fontWeight:'bold'}}>Medicine_Bill</TableCell>\r\n            <TableCell align=\"right\" style={{fontWeight:'bold'}}>Doctor_Bill</TableCell>\r\n            <TableCell align=\"right\" style={{fontWeight:'bold'}}>Total_bill</TableCell>\r\n            <TableCell align=\"right\" style={{fontWeight:'bold'}}>Status</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n        {apiData.map((data,index)=>{\r\n            return(\r\n            <TableRow key={data.Bill_Id}\r\n              sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\r\n            >\r\n  \r\n              \r\n              <TableCell align=\"center\" >{data.Bill_Id}</TableCell>\r\n              <TableCell align=\"center\" >{data.Bill_Date}</TableCell>\r\n              <TableCell align=\"center\" >{data.Patient_Name}</TableCell>\r\n              <TableCell align=\"center\">{data.Doctor_Name}</TableCell>\r\n              <TableCell align=\"center\">{data.Room_Bill}</TableCell>\r\n              <TableCell align=\"center\">{data.Medicine_Bill}</TableCell>\r\n              <TableCell align=\"center\">{data.Doctor_Bill}</TableCell>\r\n              <TableCell align=\"center\">{data.Total_Bill}</TableCell>\r\n              <TableCell align=\"center\">{data.Status}</TableCell>\r\n              <Link to=\"/Payout\">\r\n              <TableCell align=\"right\" >\r\n                <Button variant=\"contained\"  color=\"success\" onClick={()=>setBillId(data.Bill_Id)} startIcon={<ReceiptIcon/>}>Pay</Button>\r\n              </TableCell>\r\n              </Link>\r\n\r\n              <TableCell align=\"right\" >\r\n                <Button variant=\"contained\" onClick={()=>Delete(data.Bill_Id)} color=\"error\" startIcon={<DeleteIcon />}>Delete</Button>\r\n              </TableCell>\r\n \r\n            </TableRow>\r\n            )\r\n          })}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n      </Box>\r\n    </Box>\r\n   </>\r\n  )\r\n}\r\n\r\nexport default ViewBill","C:\\Users\\simra\\Desktop\\HospitalManagementSystemProject\\hospital\\hospital\\react\\src\\pages\\Patient\\ViewPatient.js",["191","192","193"],[],"import React,{useEffect,useState} from 'react'\r\nimport {Button} from '@mui/material';\r\nimport Box from '@mui/material/Box';\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport Paper from '@mui/material/Paper';\r\nimport {Link} from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport BorderColorIcon from '@mui/icons-material/BorderColor';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport PatientNav from '../../PatientNavigate';\r\n\r\nconst ViewPatients = ({setId,id}) => {\r\n  const[apiData,setApiData]=useState([]);\r\n\r\n  useEffect(() => {\r\n    axios.get('https://localhost:44360/api/PatientWebAPI')\r\n    .then((Data)=>{\r\n     \r\n      setApiData(Data.data);\r\n      console.log(Data.data)\r\n    })\r\n   },[])\r\n\r\n   const getData=()=>{\r\n    axios.get('https://localhost:44360/api/PatientWebAPI')\r\n    .then((Data)=>{\r\n     console.log(Data )\r\n      setApiData(Data.data);\r\n    })\r\n   }\r\n\r\n   const getId=(ID)=>{\r\n    setId(ID);\r\n    console.log(id);\r\n   }\r\n   const Delete=(id)=>{\r\n    axios.delete(`https://localhost:44360/api/PatientWebAPI/${id}`)\r\n    .then(()=>{\r\n      getData();\r\n    })\r\n   }\r\n\r\n  return (\r\n   <>\r\n    <Box sx={{ display: 'flex' }}>\r\n      <PatientNav/>\r\n     \r\n      <Box component=\"main\" sx={{ flexGrow: 1, p: 3,m:10 }}>\r\n      <h1>Details of Patient</h1>\r\n      <TableContainer component={Paper} elevation={12}>\r\n      <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell style={{fontWeight:'bold'}}>Patient_Id</TableCell>\r\n            <TableCell align=\"right\" style={{fontWeight:'bold'}}>Patient_Name</TableCell>\r\n            <TableCell align=\"right\" style={{fontWeight:'bold'}}>Gender</TableCell>\r\n            <TableCell align=\"right\" style={{fontWeight:'bold'}}>Age</TableCell>\r\n            <TableCell align=\"right\" style={{fontWeight:'bold'}}>Patient_Address</TableCell>\r\n            <TableCell align=\"right\" style={{fontWeight:'bold'}}>Contact_No</TableCell>\r\n            <TableCell align=\"right\" style={{fontWeight:'bold'}}>Guardian_Name</TableCell>\r\n            <TableCell align=\"right\" style={{fontWeight:'bold'}}>Emergency_contact_no</TableCell>\r\n            <TableCell align=\"right\" style={{fontWeight:'bold'}}>Nature_Of_Disease</TableCell>\r\n            <TableCell align=\"right\" style={{fontWeight:'bold'}}>Patient_Condition</TableCell>\r\n            <TableCell align=\"right\" style={{fontWeight:'bold'}}>Doctor_Name</TableCell>\r\n            <TableCell align=\"right\" style={{fontWeight:'bold'}}>Room_Type</TableCell>\r\n          \r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n        {apiData.map((data,index)=>{\r\n            return(\r\n            <TableRow key={data.Patient_Id}\r\n              sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\r\n            >\r\n              <TableCell component=\"th\" scope=\"row\">\r\n               {data.Patient_Id}\r\n              </TableCell>\r\n              <TableCell align=\"center\" >{data.Patient_Name}</TableCell>\r\n              <TableCell align=\"center\" >{data.Gender}</TableCell>\r\n              <TableCell align=\"center\" >{data.Age}</TableCell>\r\n              <TableCell align=\"center\">{data.Patient_Address}</TableCell>\r\n              <TableCell align=\"center\">{data.Contact_No}</TableCell>\r\n              <TableCell align=\"center\">{data.Guardian_Name}</TableCell>\r\n              <TableCell align=\"center\">{data.Emergency_contact_no}</TableCell>\r\n              <TableCell align=\"center\">{data.Nature_Of_Disease}</TableCell>\r\n              <TableCell align=\"center\">{data.Patient_Condition}</TableCell>\r\n              <TableCell align=\"center\">{data.Doctor_Name}</TableCell>\r\n              <TableCell align=\"center\">{data.Room_Type}</TableCell>\r\n              \r\n              \r\n              <TableCell align=\"right\" >\r\n                <Button variant=\"contained\" onClick={()=>Delete(data.Patient_Id)} color=\"error\" startIcon={<DeleteIcon />}>Delete</Button>\r\n              </TableCell>\r\n            </TableRow>\r\n            )\r\n          })}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n      </Box>\r\n    </Box>\r\n   </>\r\n  )\r\n}\r\n\r\nexport default ViewPatients","C:\\Users\\simra\\Desktop\\HospitalManagementSystemProject\\hospital\\hospital\\react\\src\\pages\\Bill\\GenerateBill.js",["194","195","196","197","198","199","200","201"],[],"import React, { useState, useEffect } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport swal from \"sweetalert\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Paper from \"@mui/material/Paper\";\r\nimport Stack from \"@mui/material/Stack\";\r\nimport SearchIcon from \"@mui/icons-material/Search\";\r\nimport Button from \"@mui/material/Button\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport { InputAdornment, TextField } from \"@mui/material\";\r\nimport Divider from \"@mui/material/Divider\";\r\nimport Select from '@mui/material/Select';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport InputLabel from '@mui/material/InputLabel';\r\nimport Side from \"../../Side\";\r\n\r\nconst GenerateBill = ({setData,Details}) => {\r\n  const Navigate=useNavigate();\r\n  const [Ano,setAno]=useState('');\r\n  const [result, setResult] = useState({});\r\n  const [medicine,setMedicine]=useState('');\r\n  const [date,setDate]=useState('');\r\n  const [Bill,setBill]=useState({})\r\n  \r\n  const Search=()=>{\r\n    axios.get(`https://localhost:44360/api/AssignRoomAndDoctor/${Ano}`)\r\n    .then((Data)=>{\r\n     setResult(Data.data);\r\n    })\r\n    console.log(result);\r\n  }\r\n\r\n  //const [Room_Id,Patient_Id,Admission_Date,Assignment_no,Doctor_Name,Doctor_Id,Patient_Name,Room_Type]={...result};\r\n \r\n  const Submit=(e)=>{\r\n    e.preventDefault();\r\n    const values={\r\n      \"Rid\":result.Room_Id,\r\n      \"Pid\":result.Patient_Id,\r\n      \"Admission_Date\":result.Admission_Date,\r\n      \"Aid\":result.Assignment_no,\r\n      \"Doctor_Name\":result.Doctor_Name,\r\n      \"Did\":result.Doctor_Id,\r\n      \"Patient_Name\":result.Patient_Name,\r\n      \"Room_Type\":result.Room_Type,\r\n      \"Bill_Date\":date,\r\n      \"Medicine_Bill\":medicine,\r\n      \"Status\":\"Pending\"\r\n    };\r\n    axios.post('https://localhost:44360/api/Bill',values).then(()=>{\r\n        console.log(values.Bill_Date);\r\n        Navigate(\"/ViewBill\");\r\n      });\r\n      axios.get(`https://localhost:44360/api/Bill/${values.Aid}`).then((Data)=>{\r\n        \r\n        setBill(Data.data);\r\n        console.log(Bill);\r\n      });\r\n  }\r\n\r\n\r\n \r\n  return (\r\n    <>\r\n      <Box sx={{ display: \"flex\" }}>\r\n        <Side />\r\n        <Box component=\"main\" sx={{ flexGrow: 1, p: 3, m: 10 }}>\r\n          <h1>Generate Bill</h1>\r\n          <TextField\r\n            value={Ano}\r\n            id=\"outlined-basic\"\r\n            name=\"type\"\r\n            autoComplete=\"off\"\r\n            label=\"Assignment_No.\"\r\n            variant=\"outlined\"\r\n            sx={{ mb: 2 }}\r\n            onChange={(e) => {\r\n              setAno(e.target.value);\r\n            }}\r\n          />\r\n\r\n          <IconButton\r\n            type=\"button\"\r\n            onClick={Search}\r\n            sx={{ mt: 1 }}\r\n            aria-label=\"search\"\r\n          >\r\n            <SearchIcon />\r\n          </IconButton>\r\n\r\n          <Divider />\r\n          {JSON.stringify(result) != '{}'  &&\r\n          \r\n          <form onSubmit={Submit}>\r\n          <Stack spacing={2} sx={{ width: '50%', mt:'20px'}}>\r\n            \r\n            <TextField \r\n             hiddenLabel \r\n             id=\"filled-hidden-label-normal\"\r\n             variant=\"filled\"\r\n              value={result.Patient_Name}\r\n              label=\"Patient Name\" \r\n              />\r\n            <TextField \r\n             hiddenLabel \r\n             id=\"filled-hidden-label-normal\"\r\n             variant=\"filled\"\r\n              value={result.Doctor_Name} \r\n              label=\"Doctor Name\" \r\n              />\r\n             <TextField \r\n              value={result.Room_Type} \r\n              label=\"Room Type\" \r\n              hiddenLabel \r\n              id=\"filled-hidden-label-normal\"\r\n              variant=\"filled\" \r\n              />\r\n               <TextField \r\n              value={result.Admission_Date} \r\n              label=\"Admission Date\" \r\n              hiddenLabel \r\n              id=\"filled-hidden-label-normal\"\r\n              variant=\"filled\"\r\n              />\r\n            <TextField \r\n              value={medicine} \r\n              label=\"Medicine Bill\" \r\n              variant=\"outlined\" \r\n              onChange={(e)=>setMedicine(e.target.value)}\r\n              />\r\n              <TextField \r\n              value={date} \r\n              label=\"Bill Date\" \r\n              variant=\"outlined\" \r\n              onChange={(e)=>setDate(e.target.value)}\r\n              />\r\n            <Button type=\"submit\" variant=\"contained\">Generate Bill</Button>\r\n           \r\n          </Stack>\r\n          </form>}\r\n         \r\n          \r\n        </Box>\r\n      </Box>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default GenerateBill;\r\n","C:\\Users\\simra\\Desktop\\HospitalManagementSystemProject\\hospital\\hospital\\react\\src\\pages\\Report\\Report.js",["202","203","204"],[],"import React, { useState, useEffect, Fragment } from \"react\";\r\nimport Table from 'react-bootstrap/Table';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Col from 'react-bootstrap/Col';\r\nimport axios from \"axios\"\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css'\r\n\r\n\r\n\r\n\r\nconst Report = () => { \r\n\r\n    const [show, setShow] = useState(false);\r\n\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => setShow(true);\r\n\r\n    const [ReportId, setReportId] = useState('')\r\n    const [PaymentId, setPaymentId] = useState('')\r\n    const [Patient_Id, setPatient_Id] = useState('')\r\n    const [Patient_Billid, setPatient_Billid] = useState('')\r\n    const [PatientName, setPatientName] = useState('')\r\n    const [PatientAddress, setPatientAddress] = useState('')\r\n    const [ContactNo, setContactNo] = useState('')\r\n    const [Disease, setDisease] = useState('')\r\n    const [PatientCondition, setPatientCondition] = useState('')\r\n    const [AdmissionDate, setAdmissionDate] = useState('')\r\n    const [DoctorName, setDoctorName] = useState('')\r\n    const [DischargeDate, setDischargeDate] = useState('')\r\n    \r\n\r\n    const [EditReportId, setEditReportId] = useState('')\r\n    const [EditPaymentId, setEditpaymentId] = useState('')\r\n    const [EditPatient_Id, setEditpatientId] = useState('')\r\n    const [EditPatient_Billid, setEditPatient_Billid] = useState('')\r\n    const [EditPatientName, setEditPatientName] = useState('')\r\n    const [EditPatientAddress, setEditPatientAddress] = useState('')\r\n    const [EditContactNo, setEditContactNo] = useState('')\r\n    const [EditDisease, setEditDisease] = useState('')\r\n    const [EditPatientCondition, setEditPatientCondition] = useState('')\r\n    const [EditAdmissionDate, setEditAdmissionDate] = useState('')\r\n    const [EditDoctorName, setEditDoctorName] = useState('')\r\n    const [EditDischargeDate, setEditDischargeDate] = useState('')\r\n\r\n\r\n\r\n    \r\n    const [data, setData] = useState([])\r\n\r\n    useEffect(() => {\r\n        getData();\r\n    }, [])\r\n\r\n    const getData = () => {\r\n        axios.get('https://localhost:44360/api/Report/')\r\n            .then((result) => {\r\n                setData(result.data)\r\n            })\r\n            .catch((error) => {\r\n                console.log(error)\r\n            })\r\n\r\n    }\r\n\r\n    const handleEdit = (id) => {\r\n       \r\n        handleShow();\r\n        axios.get(`https://localhost:44360/api/Report/${id}`)\r\n        .then((result) => {\r\n            setEditReportId(result.data.ReportId);\r\n            setEditpaymentId(result.data.PaymentId);\r\n            setEditpatientId(result.data.Patient_Id);\r\n            setEditPatient_Billid(result.data.Patient_Billid);\r\n            setEditPatientName(result.data.PatientName);\r\n            setEditPatientAddress(result.data.PatientAddress);\r\n            setEditContactNo(result.data.ContactNo);\r\n            setEditDisease(result.data.Disease);\r\n            setEditPatientCondition(result.data.PatientCondition);\r\n            setEditAdmissionDate(result.data.AdmissionDate);\r\n            setEditDoctorName(result.data.DoctorName);\r\n            setEditDischargeDate(result.data.DischargeDate);\r\n        })\r\n        .catch((error) => {\r\n            console.log(error)\r\n        })\r\n    }\r\n\r\n    const handleDelete = (id) => {\r\n        if (window.confirm(\"Are you sure want to delete this record\") === true) {\r\n            axios.delete(`https://localhost:44360/api/Report/${id}`)\r\n                .then((result) => {  \r\n                    clear();\r\n                    toast.success('Report has been Deleted');\r\n                    getData();\r\n                }).catch((error) => {\r\n                    toast.error(error);\r\n                })\r\n\r\n        }\r\n        alert(id);\r\n    }\r\n    const handleUpdate = () => {\r\n        const url = `https://localhost:44360/api/Report/${EditReportId}`;\r\n        const data = {\r\n            \"ReportId\": EditReportId,\r\n            \"PaymentId\": EditPaymentId,\r\n            \"Patient_Id\": EditPatient_Id,\r\n            \"Patient_Billid\": EditPatient_Billid,\r\n            \"PatientName\": EditPatientName,\r\n            \"PatientAddress\": EditPatientAddress,\r\n            \"ContactNo\": EditContactNo,\r\n            \"Disease\": EditDisease,\r\n            \"PatientCondition\": EditPatientCondition,\r\n            \"AdmissionDate\": EditAdmissionDate,\r\n            \"DoctorName\": EditDoctorName,\r\n            \"DischargeDate\": EditDischargeDate\r\n\r\n\r\n        }\r\n\r\n        axios.put(url, data)\r\n            .then((result) => {\r\n                getData();\r\n                clear();\r\n                toast.success('Report has been Updated');\r\n            }).catch((error) => {\r\n                toast.error(error)\r\n            })\r\n\r\n    }\r\n    const handleSave = () => {\r\n        const url = 'https://localhost:44360/api/Report';\r\n        const data = {\r\n            \"ReportId\": ReportId,\r\n            \"PaymentId\": PaymentId,\r\n            \"Patient_Id\": Patient_Id,\r\n            \"Patient_Billid\": Patient_Billid,\r\n            \"PatientName\": PatientName,\r\n            \"PatientAddress\": PatientAddress,\r\n            \"ContactNo\": ContactNo,\r\n            \"Disease\": Disease,\r\n            \"PatientCondition\": PatientCondition,\r\n            \"AdmissionDate\": AdmissionDate,\r\n            \"DoctorName\": DoctorName,\r\n            \"DischargeDate\":DischargeDate\r\n        }\r\n\r\n        axios.post(url, data)\r\n            .then((result) => {\r\n                getData();\r\n                clear();\r\n                toast.success('Report has been added');\r\n            }).catch((error) => {\r\n                toast.error(error)\r\n            })\r\n    }\r\n\r\n    const clear = () => {\r\n            setEditReportId('');\r\n            setEditpaymentId('');\r\n            setEditpatientId('');\r\n            setEditPatient_Billid('');\r\n            setEditPatientName('');\r\n            setEditPatientAddress('');\r\n            setEditContactNo('');\r\n            setEditDisease('');\r\n            setEditPatientCondition('');\r\n            setEditAdmissionDate('');\r\n            setEditDoctorName('');\r\n            setEditDischargeDate('');\r\n    }\r\nreturn (\r\n        <div>\r\n        <Fragment>\r\n            <ToastContainer />\r\n            <Container>\r\n\r\n                <Col>\r\n                <div className=\"container\">\r\n                    <Col><input type=\"text\" className=\" form-control\" placeholder=\"Enter ReportId\" value={ReportId} onChange={(e) => setReportId(e.target.value)} /></Col>\r\n                    <Col><input type=\"text\" className=\" form-control\" placeholder=\"Enter PaymentId\" value={PaymentId} onChange={(e) => setPaymentId(e.target.value)} /></Col>\r\n                    <Col><input type=\"text\" className=\" form-control\" placeholder=\"Enter Patient_Id\" value={Patient_Id} onChange={(e) => setPatient_Id(e.target.value)} /></Col>\r\n                    <Col><input type=\"text\" className=\" form-control\" placeholder=\"Enter Patient_Billid\" value={Patient_Billid} onChange={(e) => setPatient_Billid(e.target.value)} /></Col>\r\n                    <Col><input type=\"text\" className=\" form-control\" placeholder=\"Enter PatientName\" value={PatientName} onChange={(e) => setPatientName(e.target.value)} /></Col>\r\n                    <Col><input type=\"text\" className=\" form-control\" placeholder=\"Enter PatientAddress\" value={PatientAddress} onChange={(e) => setPatientAddress(e.target.value)} /></Col>\r\n                    <Col><input type=\"text\" className=\" form-control\" placeholder=\"Enter ContactNo\" value={ContactNo} onChange={(e) => setContactNo(e.target.value)} /></Col>\r\n                    <Col><input type=\"text\" className=\" form-control\" placeholder=\"Enter Disease\" value={Disease} onChange={(e) => setDisease(e.target.value)} /></Col>\r\n                    <Col><input type=\"text\" className=\" form-control\" placeholder=\"Enter PatientCondition\" value={PatientCondition} onChange={(e) => setPatientCondition(e.target.value)} /></Col>\r\n                    <Col><input type=\"text\" className=\" form-control\" placeholder=\"Enter AdmissionDate\" value={AdmissionDate} onChange={(e) => setAdmissionDate(e.target.value)} /></Col>\r\n                    <Col><input type=\"text\" className=\" form-control\" placeholder=\"Enter DoctorName\" value={DoctorName} onChange={(e) => setDoctorName(e.target.value)} /></Col>\r\n                    <Col><input type=\"text\" className=\" form-control\" placeholder=\"Enter DischargeDate\" value={DischargeDate} onChange={(e) => setDischargeDate(e.target.value)} /></Col>\r\n          \r\n          \r\n                    </div>\r\n                    <Col><button className=\"btn btn-primary\" onClick={() => handleSave()}>Add Report</button></Col>\r\n                </Col>\r\n            </Container>\r\n            <br></br>\r\n            <Table striped bordered hover>\r\n                <thead>\r\n                    <tr>\r\n                        <th>#</th>\r\n                        <th>ReportId</th>\r\n                        <th>PaymentId</th>\r\n                        <th>Patient_Id</th>\r\n                        <th>Patient_Billid</th>\r\n                        <th>PatientName</th>\r\n                        <th>PatientAddress</th>\r\n                        <th>ContactNo</th>\r\n                        <th>Disease</th>\r\n                        <th>PatientCondition</th>\r\n                        <th>AdmissionDate</th>\r\n                        <th>DoctorName</th>\r\n                        <th>DischargeDate</th>\r\n                        <th>Actions</th>\r\n                    </tr>\r\n                </thead>\r\n                 <td></td>\r\n                    <td><input type='text' className=\" form-control\" value={EditReportId} onChange={(e) => setEditReportId(e.target.value)} /></td>\r\n                    <td><input type='text' className=\" form-control\" value={EditPaymentId} onChange={(e) => setEditpaymentId(e.target.value)} /></td>\r\n                    <td><input type='text' className=\" form-control\" value={EditPatient_Id} onChange={(e) => setEditpatientId(e.target.value)} /></td>\r\n                    <td><input type='text' className=\" form-control\" value={EditPatient_Billid} onChange={(e) => setEditPatient_Billid(e.target.value)} /></td>\r\n                    <td><input type='text' className=\" form-control\" value={EditPatientName} onChange={(e) => setEditPatientName(e.target.value)} /></td>\r\n                    <td><input type='text' className=\" form-control\" value={EditPatientAddress} onChange={(e) => setEditPatientAddress(e.target.value)} /></td>\r\n                    <td><input type='text' className=\" form-control\" value={EditContactNo} onChange={(e) => setEditContactNo(e.target.value)} /></td>\r\n                    <td><input type='text' className=\" form-control\" value={EditDisease} onChange={(e) => setEditDisease(e.target.value)} /></td>\r\n                    <td><input type='text' className=\" form-control\" value={EditPatientCondition} onChange={(e) => setEditPatientCondition(e.target.value)} /></td>\r\n                    <td><input type='text' className=\" form-control\" value={EditAdmissionDate} onChange={(e) => setEditAdmissionDate(e.target.value)} /></td>\r\n                    <td><input type='text' className=\" form-control\" value={EditDoctorName} onChange={(e) => setEditDoctorName(e.target.value)} /></td>\r\n                    <td><input type='text' className=\" form-control\" value={EditDischargeDate} onChange={(e) => setEditDischargeDate(e.target.value)} /></td>\r\n                    <Button variant=\"primary\" onClick={handleUpdate}>\r\n                        Save Changes\r\n                    </Button>\r\n                <tbody>\r\n                    {\r\n                        data && data.length > 0 ?\r\n                            data.map((item, index) => {\r\n                                return (\r\n                                    <tr key={index}>\r\n                                        <td>{index + 1}</td>\r\n                                        <td>{item.ReportId}</td>\r\n                                        <td>{item.PaymentId}</td>\r\n                                        <td>{item.Patient_Id}</td>\r\n                                        <td>{item.Patient_Billid}</td>\r\n                                        <td>{item.PatientName}</td>\r\n                                        <td>{item.PatientAddress}</td>\r\n                                        <td>{item.ContactNo}</td>\r\n                                        <td>{item.Disease}</td>\r\n                                        <td>{item.PatientCondition}</td>\r\n                                        <td>{item.AdmissionDate}</td>\r\n                                        <td>{item.DoctorName}</td>\r\n                                        <td>{item.DischargeDate}</td>\r\n                                        <td colSpan={2}>\r\n                                            <button className=\"btn btn-primary\" onClick={() => handleEdit(item.ReportId)} >Edit</button> &nbsp;\r\n                                            <button className=\"btn btn-danger\" onClick={() => handleDelete(item.ReportId)}>Delete</button>\r\n                                        </td>\r\n                                    </tr>\r\n\r\n                                )\r\n                            })\r\n                            :\r\n                            'Loading..'\r\n                    }\r\n\r\n\r\n                </tbody>\r\n            </Table>\r\n\r\n        </Fragment>\r\n        </div>\r\n    )\r\n}\r\nexport default Report;","C:\\Users\\simra\\Desktop\\HospitalManagementSystemProject\\hospital\\hospital\\react\\src\\Side.js",[],[],"C:\\Users\\simra\\Desktop\\HospitalManagementSystemProject\\hospital\\hospital\\react\\src\\SideNav.js",[],[],"C:\\Users\\simra\\Desktop\\HospitalManagementSystemProject\\hospital\\hospital\\react\\src\\SideBar.js",[],[],"C:\\Users\\simra\\Desktop\\HospitalManagementSystemProject\\hospital\\hospital\\react\\src\\pages\\Add.js",["205"],[],"import React,{useEffect} from 'react'\r\nimport Box from '@mui/material/Box';\r\nimport Stack from '@mui/material/Stack';\r\nimport Button from '@mui/material/Button'\r\nimport { InputAdornment, TextField } from '@mui/material';\r\nimport * as yup from 'yup';\r\nimport swal from 'sweetalert';\r\nimport {useFormik} from 'formik';\r\nimport axios from 'axios';\r\nimport {useNavigate} from 'react-router-dom'\r\n\r\n\r\nconst Add= ({id}) => {\r\n  const Navigate=useNavigate();\r\n  const InitialValues={\r\n    Room_id:\" \",\r\n    Room_Type:\" \",\r\n    No_Of_Rooms:\" \",\r\n    Rates_Per_Day:\" \"\r\n  }\r\n\r\n  useEffect(() => {\r\n    axios.get(`https://localhost:44360/api/Room/${id}`)\r\n  .then((Data)=>{\r\n      InitialValues.Room_id=Data.data.Room_id;\r\n      InitialValues.Room_Type=Data.data.Room_Type;\r\n      InitialValues.No_Of_Rooms=Data.data.No_Of_Rooms;\r\n      InitialValues.Rates_Per_Day=Data.data.Rates_Per_Day;\r\n  })\r\n  },[])\r\n\r\n  const validationSchema=yup.object({\r\n    Room_Type:yup.string().required(\"Room Type is required\").matches(/^[A-Z?!\\sa-z]+$/, \"Invalid Type\"),\r\n    No_Of_Rooms: yup.number().min(10,\"minimum is 10\").max(50,\"maximum is 50\").required(\"Enter Between 10 - 50\"),\r\n    Rates_Per_Day:yup.number().min(500).max(10000).required(\"Enter Room Charges\")\r\n  })\r\n\r\n  const formik=useFormik({\r\n    initialValues:InitialValues,\r\n    onSubmit:(values)=>{\r\n      console.log(values);\r\n      axios.put(`https://localhost:44360/api/Room/${id}`,values).then(()=>{\r\n        swal(\"Success!\", \"Details have been Added\", \"success\").then(function () {\r\n          Navigate(\"/ViewRoom\");\r\n        }); \r\n      \r\n        })\r\n    },\r\n    validationSchema:validationSchema\r\n  })\r\n  return (\r\n    <>\r\n  \r\n      \r\n       <Box component=\"main\" sx={{ flexGrow: 1 ,m:3}}>\r\n       <form onSubmit={formik.handleSubmit} >\r\n          <Stack spacing={2} sx={{ width: '50%' }}>\r\n            \r\n            <TextField \r\n              \r\n              value={formik.values.Room_Type} \r\n              onChange={formik.handleChange}\r\n              name=\"Room_Type\"  \r\n              autoComplete='off'\r\n              label=\"Room Type\" \r\n              hiddenLabel\r\n              id=\"filled-hidden-label-normal\"\r\n              variant=\"filled\"\r\n              error={formik.touched.Room_Type && Boolean(formik.errors.Room_Type)}\r\n              helperText={formik.touched.Room_Type && formik.errors.Room_Type}\r\n              onBlur={formik.handleBlur}\r\n              />\r\n            <TextField \r\n              value={formik.values.No_Of_Rooms} \r\n              onChange={formik.handleChange}\r\n              id=\"outlined-basic\" \r\n              name=\"No_Of_Rooms\" \r\n              autoComplete='off'\r\n              label=\"Number Of Room\" \r\n              variant=\"outlined\" \r\n              error={formik.touched.No_Of_Rooms && Boolean(formik.errors.No_Of_Rooms)}\r\n              helperText={formik.touched.No_Of_Rooms && formik.errors.No_Of_Rooms}\r\n              onBlur={formik.handleBlur}\r\n              />\r\n            <TextField \r\n              value={formik.values.Rates_Per_Day} \r\n              autoComplete='off'\r\n              onChange={formik.handleChange}\r\n              InputProps={{\r\n              startAdornment: <InputAdornment position=\"start\">₹</InputAdornment>,\r\n              }} \r\n              id=\"outlined-basic\"  \r\n              name=\"Rates_Per_Day\"  \r\n              label=\"Rate per Day\" \r\n              variant=\"outlined\"\r\n              error={formik.touched.Rates_Per_Day && Boolean(formik.errors.Rates_Per_Day)}\r\n              helperText={formik.touched.Rates_Per_Day && formik.errors.Rates_Per_Day}\r\n              onBlur={formik.handleBlur} />\r\n            <Button type=\"submit\" variant=\"contained\">Save</Button>\r\n           \r\n          </Stack>\r\n          </form>\r\n       </Box>\r\n  \r\n    </>\r\n   )\r\n}\r\n\r\nexport default Add","C:\\Users\\simra\\Desktop\\HospitalManagementSystemProject\\hospital\\hospital\\react\\src\\SideMenu.js",[],[],"C:\\Users\\simra\\Desktop\\HospitalManagementSystemProject\\hospital\\hospital\\react\\src\\pages\\Reg.js",["206"],[],"C:\\Users\\simra\\Desktop\\HospitalManagementSystemProject\\hospital\\hospital\\react\\src\\PatientNavigate.js",[],[],{"ruleId":"207","severity":1,"message":"208","line":71,"column":31,"nodeType":"209","messageId":"210","endLine":71,"endColumn":33},{"ruleId":"211","severity":1,"message":"212","line":31,"column":5,"nodeType":"213","endLine":31,"endColumn":7,"suggestions":"214"},{"ruleId":"211","severity":1,"message":"215","line":34,"column":7,"nodeType":"213","endLine":34,"endColumn":9,"suggestions":"216"},{"ruleId":"217","severity":1,"message":"218","line":155,"column":10,"nodeType":"219","messageId":"220","endLine":155,"endColumn":21},{"ruleId":"217","severity":1,"message":"221","line":157,"column":8,"nodeType":"219","messageId":"220","endLine":157,"endColumn":12},{"ruleId":"217","severity":1,"message":"222","line":160,"column":8,"nodeType":"219","messageId":"220","endLine":160,"endColumn":18},{"ruleId":"217","severity":1,"message":"223","line":162,"column":8,"nodeType":"219","messageId":"220","endLine":162,"endColumn":18},{"ruleId":"217","severity":1,"message":"224","line":163,"column":10,"nodeType":"219","messageId":"220","endLine":163,"endColumn":24},{"ruleId":"217","severity":1,"message":"225","line":168,"column":8,"nodeType":"219","messageId":"220","endLine":168,"endColumn":18},{"ruleId":"211","severity":1,"message":"226","line":179,"column":6,"nodeType":"213","endLine":179,"endColumn":8,"suggestions":"227"},{"ruleId":"207","severity":1,"message":"208","line":71,"column":37,"nodeType":"209","messageId":"210","endLine":71,"endColumn":39},{"ruleId":"217","severity":1,"message":"228","line":6,"column":8,"nodeType":"219","messageId":"220","endLine":6,"endColumn":13},{"ruleId":"217","severity":1,"message":"224","line":11,"column":10,"nodeType":"219","messageId":"220","endLine":11,"endColumn":24},{"ruleId":"217","severity":1,"message":"228","line":8,"column":23,"nodeType":"219","messageId":"220","endLine":8,"endColumn":28},{"ruleId":"217","severity":1,"message":"229","line":19,"column":20,"nodeType":"219","messageId":"220","endLine":19,"endColumn":29},{"ruleId":"211","severity":1,"message":"230","line":26,"column":10,"nodeType":"213","endLine":26,"endColumn":12,"suggestions":"231"},{"ruleId":"217","severity":1,"message":"232","line":5,"column":8,"nodeType":"219","messageId":"220","endLine":5,"endColumn":13},{"ruleId":"217","severity":1,"message":"233","line":19,"column":12,"nodeType":"219","messageId":"220","endLine":19,"endColumn":16},{"ruleId":"217","severity":1,"message":"234","line":21,"column":11,"nodeType":"219","messageId":"220","endLine":21,"endColumn":22},{"ruleId":"207","severity":1,"message":"235","line":167,"column":167,"nodeType":"209","messageId":"210","endLine":167,"endColumn":169},{"ruleId":"217","severity":1,"message":"236","line":13,"column":8,"nodeType":"219","messageId":"220","endLine":13,"endColumn":23},{"ruleId":"217","severity":1,"message":"237","line":11,"column":9,"nodeType":"219","messageId":"220","endLine":11,"endColumn":13},{"ruleId":"217","severity":1,"message":"236","line":13,"column":8,"nodeType":"219","messageId":"220","endLine":13,"endColumn":23},{"ruleId":"217","severity":1,"message":"238","line":37,"column":10,"nodeType":"219","messageId":"220","endLine":37,"endColumn":15},{"ruleId":"217","severity":1,"message":"239","line":1,"column":27,"nodeType":"219","messageId":"220","endLine":1,"endColumn":36},{"ruleId":"217","severity":1,"message":"221","line":4,"column":8,"nodeType":"219","messageId":"220","endLine":4,"endColumn":12},{"ruleId":"217","severity":1,"message":"228","line":6,"column":8,"nodeType":"219","messageId":"220","endLine":6,"endColumn":13},{"ruleId":"217","severity":1,"message":"224","line":11,"column":10,"nodeType":"219","messageId":"220","endLine":11,"endColumn":24},{"ruleId":"217","severity":1,"message":"240","line":13,"column":8,"nodeType":"219","messageId":"220","endLine":13,"endColumn":14},{"ruleId":"217","severity":1,"message":"241","line":14,"column":8,"nodeType":"219","messageId":"220","endLine":14,"endColumn":16},{"ruleId":"217","severity":1,"message":"225","line":15,"column":8,"nodeType":"219","messageId":"220","endLine":15,"endColumn":18},{"ruleId":"207","severity":1,"message":"208","line":93,"column":35,"nodeType":"209","messageId":"210","endLine":93,"endColumn":37},{"ruleId":"217","severity":1,"message":"232","line":5,"column":8,"nodeType":"219","messageId":"220","endLine":5,"endColumn":13},{"ruleId":"217","severity":1,"message":"233","line":17,"column":12,"nodeType":"219","messageId":"220","endLine":17,"endColumn":16},{"ruleId":"217","severity":1,"message":"234","line":19,"column":11,"nodeType":"219","messageId":"220","endLine":19,"endColumn":22},{"ruleId":"211","severity":1,"message":"212","line":30,"column":5,"nodeType":"213","endLine":30,"endColumn":7,"suggestions":"242"},{"ruleId":"207","severity":1,"message":"235","line":97,"column":186,"nodeType":"209","messageId":"210","endLine":97,"endColumn":188},"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'InitialValues' and 'id'. Either include them or remove the dependency array.","ArrayExpression",["243"],"React Hook useEffect has missing dependencies: 'InitialValues' and 'Pid'. Either include them or remove the dependency array.",["244"],"no-unused-vars","'useNavigate' is defined but never used.","Identifier","unusedVar","'swal' is defined but never used.","'SearchIcon' is defined but never used.","'IconButton' is defined but never used.","'InputAdornment' is defined but never used.","'InputLabel' is defined but never used.","React Hook useEffect has a missing dependency: 'Bill_Id'. Either include it or remove the dependency array.",["245"],"'Paper' is defined but never used.","'setStatus' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'billId'. Either include it or remove the dependency array.",["246"],"'Modal' is defined but never used.","'show' is assigned a value but never used.","'handleClose' is assigned a value but never used.","Expected '===' and instead saw '=='.","'BorderColorIcon' is defined but never used.","'Link' is defined but never used.","'getId' is assigned a value but never used.","'useEffect' is defined but never used.","'Select' is defined but never used.","'MenuItem' is defined but never used.",["247"],{"desc":"248","fix":"249"},{"desc":"250","fix":"251"},{"desc":"252","fix":"253"},{"desc":"254","fix":"255"},{"desc":"248","fix":"256"},"Update the dependencies array to be: [InitialValues, id]",{"range":"257","text":"258"},"Update the dependencies array to be: [InitialValues, Pid]",{"range":"259","text":"260"},"Update the dependencies array to be: [Bill_Id]",{"range":"261","text":"262"},"Update the dependencies array to be: [billId]",{"range":"263","text":"264"},{"range":"265","text":"258"},[934,936],"[InitialValues, id]",[1147,1149],"[InitialValues, Pid]",[6481,6483],"[Bill_Id]",[835,837],"[billId]",[891,893]]